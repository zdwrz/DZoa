package org.trs.oa.config;import org.springframework.context.annotation.*;import org.springframework.context.support.PropertySourcesPlaceholderConfigurer;import org.springframework.context.support.ReloadableResourceBundleMessageSource;import org.springframework.web.context.request.RequestContextListener;import org.springframework.web.multipart.commons.CommonsMultipartResolver;import org.springframework.web.servlet.config.annotation.*;import org.springframework.web.servlet.view.InternalResourceViewResolver; @EnableWebMvc@Configuration@PropertySource({"classpath:file_upload.properties","classpath:app.properties"})@ComponentScan(basePackages = "org.trs.oa.controller")public class MvcConfig extends WebMvcConfigurerAdapter {     @Override    public void addResourceHandlers(ResourceHandlerRegistry registry) {        registry.addResourceHandler("/resources/**").addResourceLocations("/resources/");    }     @Override    public void configureDefaultServletHandling(DefaultServletHandlerConfigurer configurer) {        configurer.enable();    }     @Bean    public InternalResourceViewResolver jspViewResolver() {        InternalResourceViewResolver bean = new InternalResourceViewResolver();        bean.setPrefix("/WEB-INF/views/");        bean.setSuffix(".jsp");        return bean;    }    @Bean(name = "messageSource")    public ReloadableResourceBundleMessageSource getMessageSource() {        ReloadableResourceBundleMessageSource resource = new ReloadableResourceBundleMessageSource();        resource.setBasename("classpath:messages");        resource.setDefaultEncoding("UTF-8");        return resource;    }    @Bean    public static PropertySourcesPlaceholderConfigurer placeHolderConfigurer() {        return new PropertySourcesPlaceholderConfigurer();    }}